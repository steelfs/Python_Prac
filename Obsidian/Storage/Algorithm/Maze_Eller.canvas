{
	"nodes":[
		{"id":"0e15435ef752bba3","type":"text","text":"2.  가로줄 머지\n옆 셀과 다른 set일 경우 랜덤하게 merge 한다.\nmerge된 셀을 같은 set에 병합시키고 시각적으로 연결한다\n\nDictionary<int, List<EllerCell>> 딕셔너리에 Cell의 group을 키값으로 머지된 셀을 저장한다.\n\n\n","x":-420,"y":-190,"width":601,"height":170},
		{"id":"0884bd81043f0f67","type":"text","text":"1. 각 셀들은 고유한 set을 갖는다.","x":-257,"y":-320,"width":250,"height":60},
		{"id":"b32775b71419ca26","type":"text","text":"3. 세로줄 머지 \n2번에서 만들어진 Cell의 List를 파라미터로 받아서 순회하며 Cell.group을 이용해 딕셔너리의 리스트를 받아온다.\n\n받아온 리스트를 순회하며 각 셀들의 아랫쪽 셀과 일정확률로 머지한다.\n","x":-404,"y":40,"width":545,"height":180},
		{"id":"198948a6cfc488f8","x":240,"y":-60,"width":520,"height":220,"type":"text","text":"void MergeCell(EllerCell from, EllerCell to, float rate)\n셀 머지 \n\n파라미터로 from, to Cell 과 성공확률을 받아 셀이 머지될 때 to의 List를 순회하며 모두 from의 group으로 바꿔준다.\n\n시각 효과를 위해 Visualizer의 ConnectOrder에 추가하고 \nConnectPath 함수로 연결해준다."},
		{"id":"ac4dcd8c2d4cd482","type":"text","text":"for 루프의 y값이 height - 1보다 작으면 계속 반복한다.","x":-256,"y":280,"width":250,"height":60},
		{"id":"8eb7159b836f4f56","type":"text","text":"마지막줄에 대해서는 같은 set에 속하지 않은 셀들을 100% 확률로 모두 병합한다.","x":-301,"y":380,"width":339,"height":80}
	],
	"edges":[
		{"id":"4c1f9812fbb5dfbe","fromNode":"b32775b71419ca26","fromSide":"bottom","toNode":"ac4dcd8c2d4cd482","toSide":"top"},
		{"id":"9a128da192c89317","fromNode":"ac4dcd8c2d4cd482","fromSide":"bottom","toNode":"8eb7159b836f4f56","toSide":"top"}
	]
}